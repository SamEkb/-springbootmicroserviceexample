server:
  port: ${PORT:0}
spring:
  config:
    import: optional:configserver:http://localhost:8012
  cloud:
    config:
      name: users-ws
  application:
    name: users-ws
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
  datasource:
    driver-class-name: org.h2.Driver
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8010/eureka
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
management:
  tracing:
    sampling:
      probability: 1
  health:
    circuit-breakers:
      enabled: true
  endpoint:
    health:
      enabled: true
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"
logging:
  pattern:
     level: '%5p [${spring.application.name:}, %X{traceId:-}, %X{spanId:-}]'
  level:
    com.kilanov.userswebservice.service.AlbumsServiceClient: debug
    com.kilanov.userswebservice.service.UserServiceImpl: debug
resilience4j:
  circuit-breaker:
    instances:
      albums-ws:
        failure-rate-threshold: 50
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state:
          units:
            - 10s
        sliding-window-type: COUNT_BASED
        sliding-window-size: 2
        minimum-number-of-calls: 1
        event-consumer-buffer-size: 10
    circuit-breaker-aspect-order: 1
  retry:
    retry-aspect-order: 2
    instances:
      albums-ws:
        max-attempts: 3
        wait-duration:
          units:
            - 2s
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 5
